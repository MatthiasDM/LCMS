<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="240px" preserveAspectRatio="none" style="width:267px;height:240px;background:#FFFFFF;" version="1.1" viewBox="0 0 267 240" width="267px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="139" x="5" y="19">Dot Executable: null</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="170" x="5" y="36.6094">No dot executable found</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="255" x="5" y="54.2188">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="71.8281"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="70" x="5" y="89.4375">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="49" x="5" y="107.0469">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="65" x="5" y="124.6563">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="142.2656"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="14" x="9" y="159.875">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="177.4844"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="197" x="5" y="195.0938">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="212.7031"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="179" x="43" y="231.6934">UMLDoclet 2.0.14, PlantUML 1.2021.9</text><!--MD5=[c3aa8c0c72010c79128ec0bbc8bca597]
@startuml
    namespace sdm.gcms.GsonObjects.Core {

        class CalculatedField [[CalculatedField.html]] {
            +calculatedFieldId: String
            +calculatedFieldFieldName: String
            +calculatedFieldCode: String
        }

        class ChronJob [[ChronJob.html]] {
            +chronjobid: String
            +commmands: List<String>
            +parameters: String
            +interval: String
            +start: long
            +last: long
            +stop: long
            +ChronJob()
            +ChronJob(String, List<String>, String, String, long, long, long)
            +getParameters(): String
            +setParameters(String): void
            +getLast(): long
            +setLast(long): void
            +getCommmands(): List<String>
            +setCommmands(List<String>): void
            +getChronjobid(): String
            +setChronjobid(String): void
            +getInterval(): String
            +setInterval(String): void
            +getStart(): long
            +setStart(long): void
            +getStop(): long
            +setStop(long): void
        }

        class Command [[Command.html]] {
            +commandid: String
            +name: String
            +command: String
            +description: String
            +parameters: String
            +accessType: List<String>
            +executionRoles: List<String>
            +executionLimit: String
            +executionCount: String
            +executionLimitInterval: String
            +lastExecution: long
            +Command(String, String, String, String, String, List<String>, List<String>, String, String, String, long)
            +Command()
            +getExecutionRoles(): List<String>
            +setExecutionRoles(List<String>): void
            +getExecutionCount(): String
            +setExecutionCount(String): void
            +getExecutionLimitInterval(): String
            +setExecutionLimitInterval(String): void
            +getAccessType(): List<String>
            +setAccessType(List<String>): void
            +getExecutionLimit(): String
            +setExecutionLimit(String): void
            +getLastExecution(): long
            +setLastExecution(long): void
            +getCommand(): String
            +setCommand(String): void
            +getParameters(): String
            +setParameters(String): void
            +getCommandid(): String
            +setCommandid(String): void
            +getName(): String
            +setName(String): void
            +getDescription(): String
            +setDescription(String): void
        }

        class Dependency [[Dependency.html]] {
            +dependencyId: String
            +dependencyFieldName: String
            +dependencyType: String
            +dependencyValue: String
        }

        class Document [[Document.html]] {
            +documentid: String
            +title: String
            +prefix: String
            +contents: String
            +approver: String
            +category: String
            +approved_on: long
            +created_by: String
            +edited_on: long
            +created_on: long
            +Document()
            +Document(String, String, String, String, String, String, long, long, String, long)
            +getPrefix(): String
            +setPrefix(String): void
            +getValidationid(): String
            +setValidationid(String): void
            +getTitle(): String
            +setTitle(String): void
            +getContents(): String
            +setContents(String): void
            +getApprover(): String
            +setApprover(String): void
            +getCategory(): String
            +setCategory(String): void
            +getApproved_on(): long
            +setApproved_on(long): void
            +getCreated_on(): long
            +setCreated_on(long): void
            +getCreated_by(): String
            +setCreated_by(String): void
            +getEdited_on(): long
            +setEdited_on(long): void
        }

        class EditablePage [[EditablePage.html]] {
            +editablepageid: String
            +title: String
            +contents: String
            +template: String
            +approver: String
            +category: String
            +accessType: String
            +approved_on: long
            +created_on: long
            +created_by: String
            +edited_on: long
            +EditablePage()
            +EditablePage(String, String, String, String, String, String, String, long, long, String, long)
            +getAccessType(): String
            +setAccessType(String): void
            +getEditablepageid(): String
            +setEditablepageid(String): void
            +getTitle(): String
            +setTitle(String): void
            +getContents(): String
            +setContents(String): void
            +getApprover(): String
            +setApprover(String): void
            +getCategory(): String
            +setCategory(String): void
            +getApproved_on(): long
            +setApproved_on(long): void
            +getCreated_on(): long
            +setCreated_on(long): void
            +getCreated_by(): String
            +setCreated_by(String): void
            +getEdited_on(): long
            +setEdited_on(long): void
        }

        class PageDependency [[PageDependency.html]] {
            +pageDependencyId: String
            +page: String
            +dependency: String
            +archived: String
            +created_on: long
        }

    }

    center footer UMLDoclet 2.0.14, PlantUML 1.2021.9
@enduml

PlantUML version 1.2021.9(Sun Jul 25 12:13:56 CEST 2021)
(APACHE source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1252
Language: nl
Country: BE
--></g></svg>